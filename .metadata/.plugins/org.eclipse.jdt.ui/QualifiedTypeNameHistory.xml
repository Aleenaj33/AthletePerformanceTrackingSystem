<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="jakarta.persistence.ElementCollection"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.Document"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Id"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="com.ustcapstone.atheleteservice.repository.AthleteRepository"/>
    <fullyQualifiedTypeName name="com.ustcapstone.atheleteservice.repository.CoachRepository"/>
    <fullyQualifiedTypeName name="com.ustcapstone.atheleteservice.service.AthleteService"/>
    <fullyQualifiedTypeName name="com.ustcapstone.atheleteservice.model.Player"/>
    <fullyQualifiedTypeName name="com.ustcapstone.atheleteservice.model.Coach"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="com.ustcapstone.atheleteservice.model.TrainingSession"/>
    <fullyQualifiedTypeName name="com.ustcapstone.atheleteservice.interfaces.TrainingSessionFeignClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.annotations.parameters.RequestBody"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.ustcapstone.atheleteservice.interfaces.GoalServiceFeignClient"/>
    <fullyQualifiedTypeName name="com.ustcapstone.atheleteservice.model.PlayerGoal"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
</qualifiedTypeNameHistroy>
